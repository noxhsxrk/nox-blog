{"version":3,"file":"component---1194793764-sby-theme-minimal-blog-core-src-templates-homepage-query-tsx-9039bb23b3c8aa498814.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/.pnpm/@lekoarts+gatsby-theme-minimal-blog@6.2.3_@theme-ui+css@0.15.7_@emotion+react@11.11.4_@types+_b7hkarsaauvfvrntzrw5eppysu/node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://minimal-blog/./node_modules/.pnpm/@lekoarts+gatsby-theme-minimal-blog@6.2.3_@theme-ui+css@0.15.7_@emotion+react@11.11.4_@types+_b7hkarsaauvfvrntzrw5eppysu/node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack://minimal-blog/./node_modules/.pnpm/@lekoarts+gatsby-theme-minimal-blog-core@6.2.3_gatsby@5.13.6_@types+webpack@5.28.5_babel-esli_7teodmxk5apb3hhupxlsa3rzl4/node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://minimal-blog/./node_modules/.pnpm/@lekoarts+gatsby-theme-minimal-blog@6.2.3_@theme-ui+css@0.15.7_@emotion+react@11.11.4_@types+_b7hkarsaauvfvrntzrw5eppysu/node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://minimal-blog/./node_modules/.pnpm/@lekoarts+gatsby-theme-minimal-blog@6.2.3_@theme-ui+css@0.15.7_@emotion+react@11.11.4_@types+_b7hkarsaauvfvrntzrw5eppysu/node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/.pnpm/@lekoarts+gatsby-theme-minimal-blog@6.2.3_@theme-ui+css@0.15.7_@emotion+react@11.11.4_@types+_b7hkarsaauvfvrntzrw5eppysu/node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/.pnpm/@lekoarts+gatsby-theme-minimal-blog@6.2.3_@theme-ui+css@0.15.7_@emotion+react@11.11.4_@types+_b7hkarsaauvfvrntzrw5eppysu/node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx","webpack://minimal-blog/./node_modules/.pnpm/@lekoarts+gatsby-theme-minimal-blog@6.2.3_@theme-ui+css@0.15.7_@emotion+react@11.11.4_@types+_b7hkarsaauvfvrntzrw5eppysu/node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {Heading, Text} from 'theme-ui';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(Heading, {\n    as: \"h1\",\n    sx: {\n      fontSize: [5, 6, 7],\n      fontWeight: 'bold',\n      color: 'heading',\n      mb: 3\n    }\n  }, React.createElement(_components.p, null, \"Hi, I'm Saharat Waenthong\")), \"\\n\", React.createElement(Text, {\n    sx: {\n      fontSize: [2, 3, 4],\n      color: 'text',\n      lineHeight: '1.5',\n      mb: 3\n    }\n  }, React.createElement(_components.p, null, \"A dedicated Fullstack Software Engineer with a strong passion for backend development. With a comprehensive skill set that spans both front-end and back-end technologies, I am adept at creating seamless and efficient software solutions.\")), \"\\n\", React.createElement(Text, {\n    sx: {\n      fontSize: [2, 3, 4],\n      color: 'text',\n      lineHeight: '1.5',\n      mb: 3\n    }\n  }, React.createElement(_components.p, null, \"My expertise includes working with powerful languages and frameworks such as Golang, Node.js, Next.js, and React.\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  return React.createElement(React.Fragment);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\nimport Seo from \"./seo\"\nimport Hero from \"../texts/hero.mdx\"\nimport Bottom from \"../texts/bottom.mdx\"\n\nexport type MBHomepageProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: MBHomepageProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n\nexport const Head: HeadFC = () => <Seo />\n","import { graphql } from \"gatsby\"\nimport HomepageComponent, { Head } from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage, { Head } from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","_createMdxContent","props","_components","Object","assign","p","_provideComponents","components","React","Heading","as","fontSize","fontWeight","color","Text","lineHeight","wrapper","MDXLayout","posts","basePath","blogPath","useMinimalBlogConfig","siteTitle","useSiteMetadata","Layout","visuallyHidden","mt","Hero","Title","text","Link","to","replaceSlashes","Listing","showTags","List","Bottom","Head","Seo","data","allPost","Homepage","nodes","tags","tagsPath","map","tag","i","key","slug","t","_t$styles","styles","name","post","Box","title","date","ItemTags","className","BlogListItem","description","pathname","image","canonicalUrl","site","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix"],"sourceRoot":""}